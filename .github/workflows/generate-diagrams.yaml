name: Generate and Deploy Diagrams

on:
  push:
    branches: [main]
    paths: 
      - 'src/**/*.drawio'
      - '.github/workflows/generate-diagrams.yaml'
  workflow_dispatch:
  
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the already running and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-diagrams:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Install draw.io desktop
        run: |
          # Install dependencies
          sudo apt-get update
          sudo apt-get install -y wget xvfb
          
          # Download draw.io desktop AppImage
          wget -O drawio.AppImage "https://github.com/jgraph/drawio-desktop/releases/download/v21.6.5/draw.io-x86_64-21.6.5.AppImage"
          chmod +x drawio.AppImage
          
      - name: Convert drawio files to PNG
        run: |
          mkdir -p public/architecture public/workflows public/infrastructure public/business
          
          # Convert each .drawio file to PNG
          find src -name "*.drawio" | while read file; do
            echo "Processing $file"
            
            # Get relative path and create output path
            rel_path=${file#src/}
            output_dir="public/$(dirname "$rel_path")"
            mkdir -p "$output_dir"
            
            # Output filename
            filename=$(basename "$file" .drawio)
            output_file="$output_dir/$filename.png"
            
            # Convert using drawio desktop in headless mode
            xvfb-run -a ./drawio.AppImage --export --crop --width 1200 --format png --output "$output_file" "$file"
            
            if [ -f "$output_file" ]; then
              echo "Successfully created: $output_file"
            else
              echo "Failed to create: $output_file"
            fi
          done
          
          # List generated files
          echo "Generated PNG files:"
          find public -name "*.png" -type f
          
      - name: Create basic static page
        run: |
          mkdir -p public
          
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>incognia Diagrams Repository</title>
              <style>
                  body { 
                      font-family: Arial, sans-serif; 
                      margin: 40px;
                      background: #f5f5f5;
                  }
                  .container {
                      max-width: 800px;
                      margin: 0 auto;
                      background: white;
                      padding: 30px;
                      border-radius: 8px;
                      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                  }
                  h1 { color: #333; }
                  .status { 
                      background: #e3f2fd; 
                      padding: 15px; 
                      border-radius: 4px;
                      margin: 20px 0;
                  }
                  .file-list {
                      background: #f8f9fa;
                      padding: 15px;
                      border-radius: 4px;
                      margin: 20px 0;
                  }
                  code {
                      background: #f1f1f1;
                      padding: 2px 6px;
                      border-radius: 3px;
                      font-family: 'Courier New', monospace;
                  }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>üìä Incognia Diagrams Repository</h1>
                  
                  <div class="status">
                      <h3>‚úÖ GitHub Pages est√° funcionando!</h3>
                      <p>Esta p√°gina se genera autom√°ticamente desde el repositorio.</p>
                      <p><strong>URL base:</strong> <code>https://incogniadev.github.io/Diagrams/</code></p>
                  </div>
                  
                  <h3>üìÅ Archivos .drawio encontrados:</h3>
                  <div class="file-list">
          EOF
          
          # List generated PNG files and .drawio source files
          echo "<h4>Diagrams generados (PNG):</h4>" >> public/index.html
          find public -name "*.png" 2>/dev/null | sort | while read img; do
            if [ -f "$img" ]; then
              rel_path=${img#public/}
              name=$(basename "$img" .png)
              dir_name=$(dirname "$rel_path")
              if [ "$dir_name" != "." ]; then
                display_name="$dir_name/$name"
              else
                display_name="$name"
              fi
              
              echo "<div style='margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 4px;'>" >> public/index.html
              echo "<h4>üá∫ $display_name</h4>" >> public/index.html
              echo "<img src='./$rel_path' alt='$name' style='max-width: 500px; height: auto; border: 1px solid #eee;'/>" >> public/index.html
              echo "<p><strong>URL para Confluence:</strong></p>" >> public/index.html
              echo "<code style='display: block; padding: 8px; background: #f0f0f0; border-radius: 3px; word-break: break-all;'>https://incogniadev.github.io/Diagrams/$rel_path</code>" >> public/index.html
              echo "</div>" >> public/index.html
            fi
          done
          
          echo "<h4>Archivos fuente (.drawio):</h4>" >> public/index.html
          find src -name "*.drawio" | while read file; do
            echo "<p>üìÑ <code>$file</code></p>" >> public/index.html
          done
          
          cat >> public/index.html << 'EOF'
                  </div>
                  
                  <h3>üöß Estado actual:</h3>
                  <p>GitHub Pages est√° configurado y funcionando. La conversi√≥n autom√°tica de diagramas est√° en desarrollo.</p>
                  
                  <h3>üìñ C√≥mo usar:</h3>
                  <ol>
                      <li>Los archivos .drawio se encuentran en el repositorio privado</li>
                      <li>Una vez configurada la conversi√≥n, las im√°genes PNG estar√°n disponibles aqu√≠</li>
                      <li>Las URLs para Confluence seguir√°n el formato: <code>https://incogniadev.github.io/Diagrams/ruta/archivo.png</code></li>
                  </ol>
                  
                  <p><small>√öltima actualizaci√≥n: $(date)</small></p>
                  <p><small>Repositorio: <a href="https://github.com/incogniadev/Diagrams">incogniadev/Diagrams</a></small></p>
              </div>
          </body>
          </html>
          EOF
          
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/
          
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
