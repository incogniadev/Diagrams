name: Generate and Deploy Diagrams

on:
  push:
    branches: [main]
    paths: ['src/**/*.drawio']
  workflow_dispatch:
  
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the already running and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-diagrams:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install draw.io CLI
        run: |
          npm install -g @mermaid-js/mermaid-cli
          npm install -g drawio-batch
      
      - name: Export drawio files to PNG
        run: |
          mkdir -p public
          find src -name "*.drawio" | while read file; do
            # Get relative path and create output directory structure
            rel_path=${file#src/}
            output_dir="public/$(dirname "$rel_path")"
            mkdir -p "$output_dir"
            
            # Convert to PNG
            filename=$(basename "$file" .drawio)
            output_file="$output_dir/$filename.png"
            
            # Use drawio desktop in headless mode
            docker run --rm -v "$PWD:/workspace" \
              ghcr.io/jgraph/drawio-desktop:latest \
              --crop --export --format png \
              --output "/workspace/$output_file" \
              "/workspace/$file" || echo "Failed to convert $file, skipping..."
          done
          
      - name: Generate simple index page
        run: |
          mkdir -p public
          cat > public/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Incognia Diagrams</title>
              <style>
                  body { font-family: Arial, sans-serif; margin: 40px; }
                  .diagram { margin: 20px 0; padding: 15px; border: 1px solid #ddd; }
                  img { max-width: 500px; height: auto; }
                  .url { background: #f0f0f0; padding: 5px; font-family: monospace; }
              </style>
          </head>
          <body>
              <h1>ðŸ“Š Incognia Diagrams</h1>
              <p>URL base: <code>https://incogniadev.github.io/Diagrams/</code></p>
          EOF
          
          # Add diagrams to index
          find public -name "*.png" 2>/dev/null | while read img; do
            if [ -f "$img" ]; then
              rel_path=${img#public/}
              name=$(basename "$img" .png)
              echo "<div class='diagram'>" >> public/index.html
              echo "<h3>$name</h3>" >> public/index.html
              echo "<img src='./$rel_path' alt='$name'/>" >> public/index.html
              echo "<div class='url'>https://incogniadev.github.io/Diagrams/$rel_path</div>" >> public/index.html
              echo "</div>" >> public/index.html
            fi
          done
          
          echo "</body></html>" >> public/index.html
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/
          
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
